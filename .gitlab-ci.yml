# image: 
#   name: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
#   entrypoint: [""]

stages:
  - test
  - build_publish
  - deploy
  # - plan
  # - apply
  # - destroy

# test:
#   stage: test
#   image: mcr.microsoft.com/azure-cli
#   script:
#     # - pip install --no-cache-dir -r requirements.txt
#     # - pytest
#     - echo "Test should be right here"


# build_publish:
#   image: docker
#   stage: build_publish
#   services:
#     - docker:dind
#   variables:
#     DOCKER_HOST: tcp://docker:2375
#     DOCKER_TLS_CERTDIR: ""
#   before_script:
#     - "MS_1_VERSION=$(awk -F ': ' '/^ms-version:/ {print $2}' version.yaml)"
#     - export MS_1_VERSION=${MS_1_VERSION}
#   script:
#       - echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USER}" --password-stdin
#       - docker build -t bchaparro4/contract-analyzer-analysis-ms:${MS_1_VERSION} .
#       - docker push bchaparro4/contract-analyzer-analysis-ms:${MS_1_VERSION}

deploy:
  stage: deploy
  image: mcr.microsoft.com/azure-cli
  # before_script:
  #   - "MS_1_VERSION=$(awk -F ': ' '/^ms-version:/ {print $2}' version.yaml)"
  #   - export MS_1_VERSION=${MS_1_VERSION}
  script:
    - awk -W version
    # - "MS_1_VERSION=$(awk -F ': ' '/^ms-version:/ {print $2}' version.yaml)"
    # - apt-get update && apt-get install -y awk curl && apt-get clean && rm -rf /var/lib/apt/lists/*
    # - az login --service-principal -u ${AZ_USR} -p ${AZ_CERT} --tenant ${AZ_TENANT}
    # - az aks get-credentials --resource-group rsrc-grp-1 --name contract-analyzer-cluster --overwrite-existing
    # - kubectl get ns
    # - echo "This is the version --> ${MS_1_VERSION}"
    # - apt-get install -y gettext-base
    # # - apt-getg y install getext-base
    # - envsubst < ./k8s/ms-1-deployment.yaml | kubectl apply -f -
    # # - envsubst < ./k8s/ms-1-deployment.yaml | cat
